name: Project sanity checks

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always

jobs:
  formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - name: Check formatting
        run: cargo fmt --all -- --check
  audit:
    name: Check for vulnerabilities
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      - name: Install auditing tools
        run: cargo install cargo-auditable cargo-audit
      - name: Build with cargo auditable
        run: cargo auditable build --release
      - name: Audit binary
        run: cargo audit bin target/release/git_sync

  test:
    runs-on: ubuntu-latest
    name: Build and test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
  release-builds:
    name: Build binaries for release
    if: github.event_name == 'release'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-action@v1
        with:
          toolchain: stable
          targets: ${{ matrix.target }}
      - name: Install cargo-audit
        run: cargo install cargo-auditable cargo-audit

      - name: Build release binary
        run: cargo auditable build --release --target ${{ matrix.target }}
      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: target/${{ matrix.target }}/release/git_sync
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
